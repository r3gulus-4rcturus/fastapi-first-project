alembic => database migration tool 
postman => construct http packet, so that we can test the api during development

settings vs code untuk pilih versi python:
 ctrl + shift + p (view > command palette) lalu pilih python: select interpreter

Virtual Environment (VENV):
Isolated Environment yang tidak akan memengaruhi environment 
dari mesin kita. 1 Project punya 1 VENV. Jadi semisal ada 2 Project 
yang menggunakan library dengan versi BERBEDA dan gak backward
compatible, project tetep bisa jalan karena mereka berjalan di venv beda.

Buat VENV baru (di cmd):
> py -3 -m venv <name>

Dengan membuat venv baru, akan ada python interpreter baru,
di dalam folder venv. Jadi kita ga make interpreter global 
(yang biasanya kita pake) lagi. Tapi kita bakal make interpreter
yg ada di venv itu. 
(1) ngubah python inter preter biar make yg venv:
 ctrl + shift + p (view > command palette) lalu pilih python: select interpreter
(2) ubah environment terminal jadi venv (ketik ini di cmd):
> venv\Scripts\activate.bat
(3) cek di terminal biasanya ada (venv) sebelum command promptnya
(4) cek python version di kanan bawah vs code, harusnya ada (venv)


(5) pip install fastapi[all]        #install library fastapi dan juga semua optional dependency nya
(6) pip freeze (untuk lihat packages apa aja yg udah diinstall)


Run fastapi
> uvicorn <nama_file>:<nama instance fastAPI>
contoh uvicorn main:app
kalo file main.py ada di dalam package "app": uvicorn app.main:app 

# kalo kita edit code saat server sedang jalan, maka
# update tidak akan ditampilkan di page. Jadi kita harus reset server dulu
# Nah fastapi menyediakan alternatif yg lebih enak, tanpa kita
# harus reset reset mulu kode kita: yaitu  tambain --reload
> uvicorn <nama_file>:app --reload
jadi tiap kita ngubah isi file lalu ngesave, server akan
otomatis di shutddown dan di start ulang
ini khusus untuk tahap DEVELOPMENT. kalo udh di PRODUCTION
kita gaakan ngubah2 kode 


> DOKUMENTASI PENTING
> HTTP METHOD
https://developer.mozilla.org/en-US/docs/Web/HTTP/Reference/Methods
> HTTP STATUS
https://developer.mozilla.org/en-US/docs/Web/HTTP/Reference/Status
> FASTAPI DOCS
https://fastapi.tiangolo.com/tutorial 
> PYDANTIC DOCS
https://docs.pydantic.dev/latest/ 



TESTING API:
untuk testing API pake POSTMAN

Cara test: 
Klik +
pilih method (GET/POST?...)
ketik address contoh http://127.0.0.1:8000/


GET vs POST:

GET (hey api server, send me data)
          request data
user  ----------------------> API 
user  <---------------------- API 
         data yg direquest

POST (hey api server, heres some data for you)
              send data to API
user  ------------------------------> API 
user  <------------------------------ API 
         data kembalian yg mau API kirim (terserah)

Jadi POST biasanya digunakan untuk "creating things"